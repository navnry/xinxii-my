<template>
	<view class="app-modal" ref="appModal">
		<view class="app-modal__container">
			<view class="app-modal__container__header" v-if="title">
				<text class="app-modal__container__header__text">{{title}}</text>
			</view>
			<view class="app-modal__container__content" :style="{paddingTop:title ? 0 : '36rpx'}">
				<text class="app-modal__container__content__text" :style="{textAlign: align}">{{content}}</text>
			</view>
			<view class="app-modal__container__footer">
				<view v-if="showCancel" style="'width': 290rpx" class="app-modal__container__footer-left" hover-class="app-modal__container__footer-hover"
				 :hover-start-time="20" :hover-stay-time="70" @click="buttonClick('cancel')">
					<text class="app-modal__container__footer-left__text" :style="{color:cancelColor}">{{cancelText}}</text>
				</view>
				<view :style="{'width': showCancel?'290rpx':'580rpx' ,'border-bottom-left-radius':showCancel ? '0' : '16rpx' }"
				 class="app-modal__container__footer-right" hover-class="app-modal__container__footer-hover" :hover-start-time="20"
				 :hover-stay-time="70" @click="buttonClick('confirm')">
					<text class="app-modal__container__footer-right__text" :style="{color:confirmColor}">{{confirmText}}</text>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
	// #ifdef APP-PLUS
	const animation = weex.requireModule('animation');
	// #endif
	export default {
		data() {
			return {
				title: "提示",
				content: "",
				align: "center", // 对齐方式 left/center/right
				buttons:"",
				cancelText: "取消", // 取消按钮的文字
				cancelColor: "#8F8F8F", // 取消按钮颜色
				confirmText: "确定", // 确认按钮颜色
				confirmColor: "#FFAD15", // 确认按钮颜色 
				showCancel: true, // 是否显示取消按钮，默认为 true
			};
		},
		onBackPress(options) {
			if (options.from === 'navigateBack') {
				return false;
			}
			return true;
		},
		
		onReady() {
			// 添加动画，避免弹窗闪烁问题
			// #ifdef APP-PLUS
			animation.transition(this.$refs.appModal, {
				styles: {
					opacity: 1,
					scale: 1
				},
				duration: 100,
				timingFunction: 'linear'
			});
			// #endif
		},
		onLoad(options) {
			
			let modalParam = uni.getStorageSync('_systemShowModalParam');
			uni.removeStorageSync('_systemShowModalParam');
			
			this.title = modalParam.title;
			this.content = modalParam.content;
			this.contentColor = modalParam.contentColor;
			this.buttons = modalParam.buttons;
			
			
			if (this.buttons.length == 1) {
				this.showCancel = false;
				this.confirmText = this.buttons[0].title;
				this.confirmColor = this.buttons[0].titleColor;
			} else {
				this.showCancel = true;
				this.confirmText = this.buttons[1].title;
				this.confirmColor = this.buttons[1].titleColor;
				this.cancelTitle = this.buttons[0].title;
				this.cancelColor = this.buttons[0].titleColor;
			}
		},
		onUnload() {
			uni.$emit('_systemShowModalMessage', this.result);
		},
		methods: {
			clickLeft() {
				// 先关闭后发送事件
				this.closeModal();
				uni.$emit('AppModalCancel')
			},
			clickRight() {
				// 先关闭后发送事件
				this.closeModal();
				uni.$emit('AppModalConfirm')
			},
			closeModal() {
				uni.navigateBack();
			},
			buttonClick(type) {
				this.closeModal();
			
				if (type == 'cancel') {
					// 点击取消
					this.result = {
						confirm: false,
						cancel: true
					}
				} else {
					// 点击确定
					this.result = {
						confirm: true,
						cancel: false
					}
				}
			}
		}
	}
</script>

<style lang="scss">
	// nvue页面只支持flex布局
	.app-modal {
		position: fixed;
		left: 0;
		top: 0;
		right: 0;
		bottom: 0;
		flex: 1;
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		justify-content: center;
		align-items: center;
		background-color: rgba(0, 0, 0, 0.6);
		opacity: 0;
		transform: scale(1.08);
		transition-duration: .1s;

		&__container {
			flex: 1 0;
			border-radius: 16rpx;
			background-color: #fff;
			overflow: hidden;

			&__header {
				/* #ifndef APP-NVUE */
				display: flex;
				/* #endif */
				justify-content: center;
				align-items: center;
				height: 100rpx;

				&__text {
					font-size: 34rpx;
					font-weight: 400;
					color: #000000;
				}
			}

			&__content {
				/* #ifndef APP-NVUE */
				display: flex;
				/* #endif */
				justify-content: center;
				align-items: center;
				padding: 36rpx 24rpx 36rpx 24rpx;

				&__text {
					font-size: 32rpx;
					color: #636363;
					font-weight: 300;
					// line-height: 50rpx;
				}
			}

			&__footer {
				/* #ifndef APP-NVUE */
				display: flex;
				/* #endif */
				justify-content: center;
				align-items: center;
				flex-direction: row;
				height: 100rpx;
				position: relative;

				&-left {
					/* #ifndef APP-NVUE */
					display: flex;
					/* #endif */
					justify-content: center;
					align-items: center;
					height: 100rpx;
					border-top-width: 1rpx;
					border-right-width: 1rpx;
					border-color: #DCDCDF;
					border-style: solid;
					border-bottom-left-radius: 16rpx;
					// padding: 22rpx;

					&__text {
						font-size: 34rpx;
						font-weight: 400;
					}
				}

				&-right {
					/* #ifndef APP-NVUE */
					display: flex;
					/* #endif */
					justify-content: center;
					align-items: center;
					height: 100rpx;
					border-top-width: 1rpx;
					// border-right-width: 1rpx;
					border-color: #DCDCDF;
					border-style: solid;
					border-bottom-right-radius: 16rpx;
					padding: 22rpx;

					&__text {
						font-size: 34rpx;
						font-weight: 400;
					}
				}

				&-hover {
					background-color: #f1f1f1;
				}

			}
		}

	}
</style>
